#!/usr/bin/env python
# -*- coding: utf-8 -*-

# python imports
import os, subprocess, re, time
from logging import info, debug, warn, error
 
# umic-mesh imports
from um_application import Application
from um_measurement import *
from um_util import *


class um_ping(um_measurement):

    def __init__(self):
       
        um_measurement.__init__(self)

        self.parser.add_option(
                               "-p" , "--packet-size", 
                               action = "store",
                               type = int, 
                               metavar = "bytes", 
                               dest = "packet_size", 
                               default = 82,
                               help = "Set size of ping packets [default: %default]"
                           )
        
        self.parser.add_option(
                               "-c" , "--counts", 
                               action = "store", 
                               type = int, 
                               metavar = "#", 
                               dest = "count", 
                               default = 4,
                               help = "Set number of ping packets [default: %default]"
                           )
        
        self.parser.add_option(
                               "-i" , "--interval", 
                               action = "store", 
                               type = float, 
                               metavar = "secs",
                               dest = "interval", 
                               default = 1.2,
                               help = "Set (fraction of) number of seconds between pings [default: %default]"
                           )


    def test(self, iteration, run, source, target):
        return self.ssh_mrouter(source, "ping -s %i -c %i -i %i 169.254.%i"  % (self.options.packet_size, self.options.count, self.options.interval, target), self.options.count*self.options.interval+4)
#        return self.ssh_mrouter(source, "ping -s %i -c %i -i %f 127.0.0.1"  % (self.options.packet_size, self.options.count, self.options.interval), self.options.count*self.options.interval+4)


if __name__ == "__main__":
    um_ping().main()
